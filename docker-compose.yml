version: '3.8'

services:
  prusa-webcam-uploader:
    image: rliessum/prusa-webcam-uploader:latest
    container_name: prusa-webcam-uploader
    restart: unless-stopped
    
    # Portainer labels for better UI experience
    labels:
      - "io.portainer.accesscontrol.teams=administrators"
      - "io.portainer.accesscontrol.users=admin"
      - "com.docker.compose.service=prusa-webcam-uploader"
      - "org.label-schema.name=Prusa Connect Webcam Uploader"
      - "org.label-schema.description=Upload webcam snapshots to Prusa Connect"
      - "org.label-schema.version=1.0.0"
      - "org.label-schema.schema-version=1.0"
      - "traefik.enable=false"
    
    # Environment variables - Configure these in Portainer or via .env file
    environment:
      # Required: Prusa Connect credentials
      - FINGERPRINT=${FINGERPRINT:-your_fingerprint_here}
      - TOKEN=${TOKEN:-your_token_here}
      
      # Capture configuration
      - CAPTURE_METHOD=${CAPTURE_METHOD:-http}
      - HTTP_URL=${HTTP_URL:-https://webcam.connect.prusa3d.com/c/snapshot}
      
      # HTTP capture settings (mjpeg-streamer)
      - SNAPSHOT_URL=${SNAPSHOT_URL:-http://host.docker.internal:8080/?action=snapshot}
      
      # RTSP capture settings
      - RTSP_URL=${RTSP_URL:-}
      - RTSP_TIMEOUT=${RTSP_TIMEOUT:-10}
      
      # Network and connectivity
      - PING_HOST=${PING_HOST:-host.docker.internal}
      
      # Timing settings
      - DELAY_SECONDS=${DELAY_SECONDS:-10}
      - LONG_DELAY_SECONDS=${LONG_DELAY_SECONDS:-60}
      - TIMEOUT=${TIMEOUT:-30}
      - MAX_RETRIES=${MAX_RETRIES:-3}
      
      # Debug settings
      - PYTHONLOGLEVEL=${PYTHONLOGLEVEL:-INFO}
    
    # Network configuration to access host services
    extra_hosts:
      - "host.docker.internal:host-gateway"
    
    # Volume mounts for persistence and configuration
    volumes:
      - prusa-logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    
    # Security settings
    user: "1000:1000"
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=10m
    
    # Resource limits - adjust based on your system
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
        reservations:
          memory: 128M
          cpus: '0.1'
      restart_policy:
        condition: unless-stopped
        delay: 5s
        max_attempts: 5
        window: 120s
    
    # Health check configuration
    healthcheck:
      test: ["CMD", "python", "-c", "import sys, os; sys.exit(0 if os.getenv('FINGERPRINT', '<fingerprint>') != '<fingerprint>' else 1)"]
      interval: 60s
      timeout: 10s
      start_period: 30s
      retries: 3
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service,version"

# Named volumes for data persistence
volumes:
  prusa-logs:
    driver: local
    labels:
      - "com.docker.compose.volume=prusa-logs"
      - "org.label-schema.name=Prusa Webcam Uploader Logs"

# Optional: Custom network (uncomment if needed)
# networks:
#   prusa-network:
#     driver: bridge
#     labels:
#       - "com.docker.compose.network=prusa-network"
